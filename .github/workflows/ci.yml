name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'bootstrap/**'
      - 'core/**'
      - 'infrastructure/**'
      - 'common/**'
      - 'build.gradle'
      - 'settings.gradle'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'bootstrap/**'
      - 'core/**'
      - 'infrastructure/**'
      - 'common/**'
      - 'build.gradle'
      - 'settings.gradle'
      - '.github/workflows/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Run integration tests
      run: ./gradlew :bootstrap:customer-api:test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: '**/build/test-results/test/TEST-*.xml'
        reporter: java-junit
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/build/test-results/test/'
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: '**/build/reports/jacoco/'